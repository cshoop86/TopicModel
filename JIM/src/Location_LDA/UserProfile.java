package Location_LDA;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;

public class UserProfile {
	public int user_id;
	public int location;

	
	public ArrayList<Integer> tags
		= new ArrayList<Integer>();
	public ArrayList<Integer> tag_location
		= new ArrayList<Integer>();
	public ArrayList<Integer> tag_category
	    = new ArrayList<Integer>();
	
	// used in evaluation
	public ArrayList<Integer> targets = new ArrayList<Integer>();
	
	
	int length;
	
    // s[i] = 1: user's item i is generated by user interests
    // s[i] = 0: user's item i is generated by location interests
	public ArrayList<Integer> s = new ArrayList<Integer>();
	
	// z[i]: user's item i is assigned to topic z[i]
	public ArrayList<Integer> z = new ArrayList<Integer>();
	
	
	public UserProfile(int user_id, int loc){
		this.user_id = user_id;
		this.location = loc;
		this.length = 0;
	}
	
	public UserProfile(int user_id){
		this.user_id = user_id;
		
		this.length = 0;
	}
	
	/**
	 * 
	 * @param tag
	 */
	public void addItem(int tag){
		tags.add(tag);
		length++;
	}
	
	public void addItem(int tag, int loc){
		tags.add(tag);
		tag_location.add(loc);
		length++;
	}
	
	public void addItem(int tag, int loc, int category){
		tags.add(tag);
		tag_location.add(loc);
		tag_category.add(category);
		length++;
	}
	
	
	public void addTarget(int tag){
		targets.add(tag);
	}
	
	/**
	 * 
	 * @param tag_idx
	 * @return
	 */
	public int getItem(int tag_idx){
		return tags.get(tag_idx);
	}
	public int getItemLoc(int tag_idx){
		return tag_location.get(tag_idx);
	}
	public int getItemCategory(int tag_idx)
	{
		return tag_category.get(tag_idx);
	}
	
	public boolean containsItem(int item){
		return tags.contains(item);
	}
	
	/**
	 * 
	 * @param idx
	 * @param value
	 */
	public void setS(int idx, int value){
		/*
		if(s.size() == 0){
			if(idx != 0)
				System.err.println("ERROR setS idx "+idx+"; value "+value);
			
			s.add(value);
		}
		s.set(idx, value);
		*/
		if(s.size() <= idx){
			if(idx != s.size())
				System.err.println("ERROR setS idx "+idx+"; value "+value);
			
			s.add(value);
		}
		else
			s.set(idx, value);
	}
	
	public int getS(int idx){
		return s.get(idx);
	}
	
	/**
	 * 
	 * @param idx
	 * @param value
	 */
	public void setZ(int idx, int value){
		if(z.size() <= idx){
			if(idx != z.size())
				System.err.println("ERROR setZ idx "+idx+"; value "+value);
			
			z.add(value);
		}
		else
			z.set(idx, value);
	}
	
	public int getZ(int idx){
		return z.get(idx);
	}
	
}

